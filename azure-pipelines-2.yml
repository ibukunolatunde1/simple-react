name: $(Build.SourceBranchName)-$(Date:yyyyMMdd)-$(Rev:r)
trigger:
  branches:
    include:
    - develop
  paths:
    include:
    - 'atomic-services/account/*'
    - 'utility/server/package.json'

variables:
- template: templates/vars/vars-global.yml
  parameters:
    serviceName: account

stages:
- stage: 'Build'
  displayName: 'Build the docker image'
  jobs:
  - job: 'account_build'
    displayName: 'Build Job'
    steps:
      - template: templates/steps-build-docker.yml
        parameters:
          Dockerfile: ${{ variables.servicePath }}/Dockerfile
          buildContext: .
          image_tag: ${{ variables.image_tag }}
          service: $(service)

- stage: 'Deploy_dev'
    variables:
      - template: templates/vars/vars-dev.yml
    jobs:
    - deployment: Deploy_to_dev
      pool:
        vmImage: ${{ variables.vmImage }}
      environment: ${{ variables.environmentName }}
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
            - template: templates/steps-deploytoACR.yml
              parameters:
                containerRegistryURL: ${{ variables.containerRegistryURL }}
                containerRegistry: ${{ variables.containerRegistry }}
                image_tag: ${{ variables.image_tag }}
                service: $(service)
            - template: templates/steps-helmDeploy.yml
              parameters:
                env: dev
                azureSubscription: ${{ variables.azureSubscription }}
                azureResourceGroup: ${{ variables.azureResourceGroup }}
                kubernetesCluster: ${{ variables.kubernetesCluster }}
                namespace: ${{ variables.namespace }}
                chartPath: ${{ variables.servicePath}}/${{ variables.chartPath }}
                releaseName: ${{ variables.releaseName }}
                arguments: ${{ variables.arguments }}

- stage: 'Deploy_qa'
    variables:
      - template: templates/vars/vars-qa.yml
    dependsOn: Deploy_dev
    jobs:
    - template: templates/steps-waitforvalidation.yml
    - deployment: Deploy_to_qa
      pool:
        vmImage: ${{ variables.vmImage }}
      environment: ${{ variables.environmentName }}
      dependsOn: waitForValidation
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
            - template: templates/steps-deploytoACR.yml
              parameters:
                containerRegistryURL: ${{ variables.containerRegistryURL }}
                containerRegistry: ${{ variables.containerRegistry }}
                image_tag: ${{ variables.image_tag }}
                service: $(service)
            - template: templates/steps-helmDeploy.yml
              parameters:
                env: ${{ env }}
                azureSubscription: ${{ variables.azureSubscription }}
                azureResourceGroup: ${{ variables.azureResourceGroup }}
                kubernetesCluster: ${{ variables.kubernetesCluster }}
                namespace: ${{ variables.namespace }}
                chartPath: ${{ variables.servicePath}}/${{ variables.chartPath }}
                releaseName: ${{ variables.releaseName }}
                arguments: ${{ variables.arguments }}

- stage: 'Deploy_uat'
    variables:
      - template: templates/vars/vars-uat.yml
    dependsOn: Deploy_dev
    jobs:
    - template: templates/steps-waitforvalidation.yml
    - deployment: Deploy_to_uat
      pool:
        vmImage: ${{ variables.vmImage }}
      environment: ${{ variables.environmentName }}
      dependsOn: waitForValidation
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
            - template: templates/steps-deploytoACR.yml
              parameters:
                containerRegistryURL: ${{ variables.containerRegistryURL }}
                containerRegistry: ${{ variables.containerRegistry }}
                image_tag: ${{ variables.image_tag }}
                service: $(service)
