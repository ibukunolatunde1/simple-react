name: $(Build.SourceBranchName)-$(Date:yyyMMdd)-$(Rev:r)
trigger:
  branches:
    include:
    - develop
  paths:
    include:
    - 'apps/admin-app'
    - '/shared'

variables:
  - group: 'HUGO-APP-ADMIN build variables (DEV)'

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '4a9a96d0-d281-4636-9804-b5b4fd9c4009'
  # Web app name
  webAppName: 'tailwind-dev'
  # Environment name
  environmentName: 'tailwind-dev'
  # Agent VM image name
  vmImageName: 'ubuntu-16.04'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      displayName: 'Install NodeJS'
      inputs:
        versionSpec: '12.18.3'
    
    - script: 
        yarn
      displayName: 'Yarn Install'
    
    - task: geeklearningio.gl-vsts-tasks-yarn.yarn-task.Yarn@3
      displayName: 'Yarn build:public-app'
      inputs:
        arguments: 'build:public-app'

    - task: CopyFiles@2
      displayName: 'Copy web.config to Build folder'
      inputs:
        Contents: web.config
        TargetFolder: 'apps/public-app/build'
        CleanTargetFolder: true
    
    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        Contents: 'apps/public-app/build'
        TargetFolder: '$(build.artifactstagingdirectory)'
        CleanTargetFolder: true

    - task: ArchiveFiles@2
      displayName: 'Archive apps/public-app/build'
      inputs:
        rootFolderOrFile: 'apps/public-app/build'
        includeRootFolder: false
    
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        artifact: 'hugo-public-app'

- stage: Dev
  displayName: Deploy to Dev Slot
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: hugo-admin-$(environment)'
            inputs:
              azureSubscription: $(azureSubscription)
              WebAppName: $(webAppName)
              deployToSlotOrASE: true
              ResourceGroupName: $(resourceGroup)
              SlotName: dev

- stage: QA
  displayName: Deploy to QA Stage
  dependsOn: Dev
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: hugo-admin-$(environment)'
            inputs:
              azureSubscription: $(azureSubscription)
              WebAppName: $(webAppName)
              deployToSlotOrASE: true
              ResourceGroupName: $(resourceGroup)
              SlotName: dev

- stage: Dev
  displayName: Deploy stage 
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: hugo-admin-$(environment)'
            inputs:
              azureSubscription: $(azureSubscription)
              WebAppName: $(webAppName)
              deployToSlotOrASE: true
              ResourceGroupName: $(resourceGroup)
              SlotName: dev

- stage: Dev
  displayName: Deploy stage 
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: hugo-admin-$(environment)'
            inputs:
              azureSubscription: $(azureSubscription)
              WebAppName: $(webAppName)
              deployToSlotOrASE: true
              ResourceGroupName: $(resourceGroup)
              SlotName: dev